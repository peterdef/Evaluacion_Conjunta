# Script para construir im√°genes Docker del Sistema Agr√≠cola
Write-Host "üöÄ Iniciando construcci√≥n de im√°genes Docker..." -ForegroundColor Green

# Volver al directorio ra√≠z
Set-Location $PSScriptRoot

# Construir Eureka Server
Write-Host "üì¶ Compilando Eureka Server..." -ForegroundColor Yellow
Set-Location "ms-eureka-server"
mvn clean package -DskipTests
if ($LASTEXITCODE -eq 0) {
    docker build -t sistema-agricola/eureka-server:latest .
    Write-Host "‚úÖ Eureka Server construido exitosamente" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error construyendo Eureka Server" -ForegroundColor Red
}

# Volver al directorio ra√≠z
Set-Location $PSScriptRoot

# Construir API Gateway
Write-Host "üì¶ Compilando API Gateway..." -ForegroundColor Yellow
Set-Location "ms-api-gateway"
mvn clean package -DskipTests
if ($LASTEXITCODE -eq 0) {
    docker build -t sistema-agricola/api-gateway:latest .
    Write-Host "‚úÖ API Gateway construido exitosamente" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error construyendo API Gateway" -ForegroundColor Red
}

# Volver al directorio ra√≠z
Set-Location $PSScriptRoot

# Construir Agricultura
Write-Host "üì¶ Compilando Agricultura..." -ForegroundColor Yellow
Set-Location "api-publicaciones"
mvn clean package -DskipTests
if ($LASTEXITCODE -eq 0) {
    docker build -t sistema-agricola/agricultura:latest .
    Write-Host "‚úÖ Agricultura construido exitosamente" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error construyendo Agricultura" -ForegroundColor Red
}

# Volver al directorio ra√≠z
Set-Location $PSScriptRoot

# Construir Inventario
Write-Host "üì¶ Compilando Inventario..." -ForegroundColor Yellow
Set-Location "ms-inventario"
mvn clean package -DskipTests
if ($LASTEXITCODE -eq 0) {
    docker build -t sistema-agricola/inventario:latest .
    Write-Host "‚úÖ Inventario construido exitosamente" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error construyendo Inventario" -ForegroundColor Red
}

# Volver al directorio ra√≠z
Set-Location $PSScriptRoot

# Construir Facturaci√≥n
Write-Host "üì¶ Compilando Facturaci√≥n..." -ForegroundColor Yellow
Set-Location "ms-facturacion"
mvn clean package -DskipTests
if ($LASTEXITCODE -eq 0) {
    docker build -t sistema-agricola/facturacion:latest .
    Write-Host "‚úÖ Facturaci√≥n construido exitosamente" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error construyendo Facturaci√≥n" -ForegroundColor Red
}

# Volver al directorio ra√≠z
Set-Location $PSScriptRoot

# Construir Notificaciones
Write-Host "üì¶ Compilando Notificaciones..." -ForegroundColor Yellow
Set-Location "ms-notificaciones"
mvn clean package -DskipTests
if ($LASTEXITCODE -eq 0) {
    docker build -t sistema-agricola/notificaciones:latest .
    Write-Host "‚úÖ Notificaciones construido exitosamente" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error construyendo Notificaciones" -ForegroundColor Red
}

# Volver al directorio ra√≠z
Set-Location $PSScriptRoot

Write-Host "`nüéâ ¬°Proceso de construcci√≥n completado!" -ForegroundColor Green
Write-Host "   Ahora puedes proceder con el despliegue en Kubernetes" -ForegroundColor Cyan
